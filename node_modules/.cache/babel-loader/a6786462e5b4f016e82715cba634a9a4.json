{"ast":null,"code":"var _jsxFileName = \"/home/ravinder/Desktop/TodoApp/client/src/components/SocketIOTest.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nlet socket;\n\nconst SocketIOTest = ({\n  location\n}) => {\n  const [room, setRoom] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [users, setUsers] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const ENDPOINT = \"localhost:5000/\";\n  socket = io(ENDPOINT);\n  useEffect(() => {\n    // let user = {\n    //   user: name,\n    //   action: \"Todo was created\",\n    //   room: \"testRoom\",\n    // };\n    // if (name == \"ravinder\") {\n    //   user.admin = true;\n    // }\n    // socket.emit(\"todoCreated\", user, (error) => {\n    //   if (error) {\n    //     alert(error);\n    //   }\n    // });\n    socket.on(\"todoCreated\", message => {\n      console.log(\"message\", message);\n    });\n  }, []);\n\n  const sendMessage = event => {\n    event.preventDefault();\n    let user = {\n      user: name,\n      action: \"Todo was created\",\n      room: \"testRoom\"\n    };\n\n    if (name == \"ravinder\") {\n      user.admin = true;\n    }\n\n    socket.emit(\"todoCreated\", user, error => {\n      if (error) {\n        alert(error);\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"outerContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container panel transparent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: event => setName(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, \"Submit\"));\n};\n\nexport default SocketIOTest;","map":{"version":3,"sources":["/home/ravinder/Desktop/TodoApp/client/src/components/SocketIOTest.jsx"],"names":["React","useState","useEffect","io","socket","SocketIOTest","location","room","setRoom","name","setName","message","setMessage","users","setUsers","messages","setMessages","ENDPOINT","on","console","log","sendMessage","event","preventDefault","user","action","admin","emit","error","alert","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,IAAIC,MAAJ;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACrC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMgB,QAAQ,GAAG,iBAAjB;AAEAb,EAAAA,MAAM,GAAGD,EAAE,CAACc,QAAD,CAAX;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAE,IAAAA,MAAM,CAACc,EAAP,CAAU,aAAV,EAA0BP,OAAD,IAAa;AACpCQ,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBT,OAAvB;AACD,KAFD;AAGD,GAjBQ,EAiBN,EAjBM,CAAT;;AAmBA,QAAMU,WAAW,GAAIC,KAAD,IAAW;AAC7BA,IAAAA,KAAK,CAACC,cAAN;AACA,QAAIC,IAAI,GAAG;AACTA,MAAAA,IAAI,EAAEf,IADG;AAETgB,MAAAA,MAAM,EAAE,kBAFC;AAGTlB,MAAAA,IAAI,EAAE;AAHG,KAAX;;AAKA,QAAIE,IAAI,IAAI,UAAZ,EAAwB;AACtBe,MAAAA,IAAI,CAACE,KAAL,GAAa,IAAb;AACD;;AACDtB,IAAAA,MAAM,CAACuB,IAAP,CAAY,aAAZ,EAA2BH,IAA3B,EAAkCI,KAAD,IAAW;AAC1C,UAAIA,KAAJ,EAAW;AACTC,QAAAA,KAAK,CAACD,KAAD,CAAL;AACD;AACF,KAJD;AAKD,GAfD;;AAiBA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAGE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAGN,KAAD,IAAWZ,OAAO,CAACY,KAAK,CAACQ,MAAN,CAAaC,KAAd,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE;AAAQ,IAAA,OAAO,EAAEV,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CADF;AAQD,CAtDD;;AAwDA,eAAehB,YAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\n\nlet socket;\n\nconst SocketIOTest = ({ location }) => {\n  const [room, setRoom] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [users, setUsers] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const ENDPOINT = \"localhost:5000/\";\n\n  socket = io(ENDPOINT);\n\n  useEffect(() => {\n    // let user = {\n    //   user: name,\n    //   action: \"Todo was created\",\n    //   room: \"testRoom\",\n    // };\n    // if (name == \"ravinder\") {\n    //   user.admin = true;\n    // }\n    // socket.emit(\"todoCreated\", user, (error) => {\n    //   if (error) {\n    //     alert(error);\n    //   }\n    // });\n    socket.on(\"todoCreated\", (message) => {\n      console.log(\"message\", message);\n    });\n  }, []);\n\n  const sendMessage = (event) => {\n    event.preventDefault();\n    let user = {\n      user: name,\n      action: \"Todo was created\",\n      room: \"testRoom\",\n    };\n    if (name == \"ravinder\") {\n      user.admin = true;\n    }\n    socket.emit(\"todoCreated\", user, (error) => {\n      if (error) {\n        alert(error);\n      }\n    });\n  };\n\n  return (\n    <div className=\"outerContainer\">\n      <div className=\"container panel transparent\"></div>\n      {/* <TextContainer users={users}/> */}\n      <input type=\"text\" onChange={(event) => setName(event.target.value)} />\n      <button onClick={sendMessage}>Submit</button>\n    </div>\n  );\n};\n\nexport default SocketIOTest;\n"]},"metadata":{},"sourceType":"module"}