{"ast":null,"code":"import _slicedToArray from\"/home/ravinder/Desktop/TodoApp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import io from\"socket.io-client\";var socket;var ENDPOINT=\"https://todo-app-services.herokuapp.com/\";socket=io(ENDPOINT);var SocketIOTest=function SocketIOTest(_ref){var location=_ref.location;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),room=_useState2[0],setRoom=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),name=_useState4[0],setName=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),message=_useState6[0],setMessage=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),users=_useState8[0],setUsers=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),messages=_useState10[0],setMessages=_useState10[1];useEffect(function(){socket.on(\"todoCreated\",function(message){console.log(\"message\",message);});},[ENDPOINT]);var sendMessage=function sendMessage(event){event.preventDefault();var user={user:name,action:\"Todo was created\",room:\"testRoom\"};socket.emit(\"todoCreated\",user,function(error){if(error){alert(error);}});};return/*#__PURE__*/React.createElement(\"div\",{className:\"outerContainer\"},/*#__PURE__*/React.createElement(\"div\",{className:\"container panel transparent\"}),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",onChange:function onChange(event){return setName(event.target.value);}}),/*#__PURE__*/React.createElement(\"button\",{onClick:sendMessage},\"Submit\"));};export default SocketIOTest;","map":{"version":3,"sources":["/home/ravinder/Desktop/TodoApp/client/src/components/SocketIOTest.jsx"],"names":["React","useState","useEffect","io","socket","ENDPOINT","SocketIOTest","location","room","setRoom","name","setName","message","setMessage","users","setUsers","messages","setMessages","on","console","log","sendMessage","event","preventDefault","user","action","emit","error","alert","target","value"],"mappings":"4JAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,EAAP,KAAe,kBAAf,CAEA,GAAIC,CAAAA,MAAJ,CACA,GAAMC,CAAAA,QAAQ,CAAG,0CAAjB,CAEAD,MAAM,CAAGD,EAAE,CAACE,QAAD,CAAX,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,eACbN,QAAQ,CAAC,EAAD,CADK,wCAC9BO,IAD8B,eACxBC,OADwB,8BAEbR,QAAQ,CAAC,EAAD,CAFK,yCAE9BS,IAF8B,eAExBC,OAFwB,8BAGPV,QAAQ,CAAC,EAAD,CAHD,yCAG9BW,OAH8B,eAGrBC,UAHqB,8BAIXZ,QAAQ,CAAC,EAAD,CAJG,yCAI9Ba,KAJ8B,eAIvBC,QAJuB,8BAKLd,QAAQ,CAAC,EAAD,CALH,0CAK9Be,QAL8B,gBAKpBC,WALoB,gBAOrCf,SAAS,CAAC,UAAM,CACdE,MAAM,CAACc,EAAP,CAAU,aAAV,CAAyB,SAACN,OAAD,CAAa,CACpCO,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAuBR,OAAvB,EACD,CAFD,EAGD,CAJQ,CAIN,CAACP,QAAD,CAJM,CAAT,CAMA,GAAMgB,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAW,CAC7BA,KAAK,CAACC,cAAN,GACA,GAAIC,CAAAA,IAAI,CAAG,CACTA,IAAI,CAAEd,IADG,CAETe,MAAM,CAAE,kBAFC,CAGTjB,IAAI,CAAE,UAHG,CAAX,CAKAJ,MAAM,CAACsB,IAAP,CAAY,aAAZ,CAA2BF,IAA3B,CAAiC,SAACG,KAAD,CAAW,CAC1C,GAAIA,KAAJ,CAAW,CACTC,KAAK,CAACD,KAAD,CAAL,CACD,CACF,CAJD,EAKD,CAZD,CAcA,mBACE,2BAAK,SAAS,CAAC,gBAAf,eACE,2BAAK,SAAS,CAAC,6BAAf,EADF,cAEE,6BAAO,IAAI,CAAC,MAAZ,CAAmB,QAAQ,CAAE,kBAACL,KAAD,QAAWX,CAAAA,OAAO,CAACW,KAAK,CAACO,MAAN,CAAaC,KAAd,CAAlB,EAA7B,EAFF,cAGE,8BAAQ,OAAO,CAAET,WAAjB,WAHF,CADF,CAOD,CAlCD,CAoCA,cAAef,CAAAA,YAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\n\nlet socket;\nconst ENDPOINT = \"https://todo-app-services.herokuapp.com/\";\n\nsocket = io(ENDPOINT); \n\nconst SocketIOTest = ({ location }) => {\n  const [room, setRoom] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [users, setUsers] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n \n  useEffect(() => {\n    socket.on(\"todoCreated\", (message) => {\n      console.log(\"message\", message);\n    });\n  }, [ENDPOINT]);\n\n  const sendMessage = (event) => {\n    event.preventDefault();\n    let user = {\n      user: name,\n      action: \"Todo was created\",\n      room: \"testRoom\",\n    };\n    socket.emit(\"todoCreated\", user, (error) => {\n      if (error) {\n        alert(error);\n      }\n    });\n  };\n\n  return (\n    <div className=\"outerContainer\">\n      <div className=\"container panel transparent\"></div>\n      <input type=\"text\" onChange={(event) => setName(event.target.value)} />\n      <button onClick={sendMessage}>Submit</button>\n    </div>\n  );\n};\n\nexport default SocketIOTest;\n"]},"metadata":{},"sourceType":"module"}